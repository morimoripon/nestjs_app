// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  NORMAL
  ADMIN
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique @db.VarChar
  password  String    @db.VarChar
  name      String?   @db.VarChar
  role      Role      @default(NORMAL)
  imageUrl  String?   @db.VarChar
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @default(now()) @updatedAt @db.Timestamptz(6)
  deletedAt DateTime?

  items    Item[]
  comments Comment[]
  orders   Order[]
}

model Item {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  name        String  @db.VarChar
  description String? @db.VarChar
  amount      Int     @db.Integer
  imageUrl    String? @db.VarChar

  user     User      @relation(fields: [userId], references: [id])
  comments Comment[]
  orders   Order[]
}

model Order {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  itemId    String   @db.Uuid
  userId    String   @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  amount     Int     @db.Integer
  name       String? @db.VarChar
  prefecture String  @db.VarChar
  address1   String  @db.VarChar
  address2   String? @db.VarChar
  status     String  @db.VarChar

  item Item @relation(fields: [itemId], references: [id])
  user User @relation(fields: [userId], references: [id])
}

model Comment {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String   @db.Uuid
  itemId    String   @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamptz(6)

  text String? @db.VarChar

  user User @relation(fields: [userId], references: [id])
  item Item @relation(fields: [itemId], references: [id])
}
